import mongoose from "mongoose";
import { faker } from "@faker-js/faker";
import { emotion } from "../models/emotion.js"; // Assure-toi que le chemin est correct

// Connexion √† MongoDB
mongoose
  .connect("mongodb://127.0.0.1:27017/diary", {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => console.log("Connexion √† MongoDB r√©ussie"))
  .catch((err) => console.error(" Erreur de connexion √† MongoDB :", err));

// Liste des √©motions avec les √©mojis correspondants
const emotionNames = [
  { name: "happy", icon: "üòÑ" },
  { name: "angry", icon: "üò°" },
  { name: "neutral", icon: "üòê" },
  { name: "surprise", icon: "üòØ" },
  { name: "sad", icon: "üò¢" },
  { name: "fear", icon: "üò®" },
  { name: "disgust", icon: "ü§¢" }
];

const seedEmotions = async () => {
  try {
    await emotion.deleteMany(); // Supprime les anciennes donn√©es pour √©viter les doublons

    // Utilisation de la liste des √©motions pour ins√©rer avec les √©mojis correspondants
    const emotions = emotionNames.map((emotion) => ({
      name: emotion.name,
      icon: emotion.icon, // Utilisation de l'√©moji sp√©cifique
    }));

    await emotion.insertMany(emotions);
    console.log("Emotions ins√©r√©es avec succ√®s !");
  } catch (error) {
    console.error("Erreur lors de l'insertion des √©motions :", error);
  } finally {
    mongoose.connection.close(); // Ferme la connexion apr√®s insertion
  }
};

// Ex√©cuter le script
seedEmotions();
